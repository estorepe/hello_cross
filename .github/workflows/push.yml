name: Flutter Linux Build (x64 + ARM64)
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        arch: [x64, arm64]
    runs-on: ${{ contains(matrix.arch, 'arm64') && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ninja-build \
          libgtk-3-dev \
          clang \
          cmake \
          gcc \
          g++ \
          libglu1-mesa \
          libwayland-dev \
          libxkbcommon-dev

        # ARM64-specific requirements
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu
        fi

    - name: Install Flutter
      uses: cjlapao/setup-flutter@v1
      with:
        channel: 'stable'
        architecture: ${{ matrix.arch }}
      # Fallback for ARM64 if action doesn't support it :cite[10]
      continue-on-error: ${{ matrix.arch == 'arm64' }}

    - name: Manual Flutter Setup (ARM64)
      if: matrix.arch == 'arm64' && steps.Install-Flutter.outcome == 'failure'
      run: |
        git clone -b stable https://github.com/flutter/flutter.git
        echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
        flutter doctor -v

    - name: Build Native Binaries
      run: |
        # Cross-compilation setup for ARM64 :cite[5]:cite[8]
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          export CC=aarch64-linux-gnu-gcc
          export CXX=aarch64-linux-gnu-g++
        fi
        
        ./scripts/build_native.sh ${{ matrix.arch }}
        chmod +x assets/native/linux/*

    - name: Build Flutter Application
      run: |
        flutter config --enable-linux-desktop
        flutter clean
        flutter pub get
        
        # ARM64 requires explicit platform specification :cite[2]
        flutter build linux --release \
          --target-platform=linux-${{ matrix.arch }} \
          --verbose

    - name: Verify Bundle
      run: |
        file build/linux/${{ matrix.arch }}/release/bundle/your_app_name
        ldd build/linux/${{ matrix.arch }}/release/bundle/your_app_name

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-app-${{ matrix.arch }}
        path: build/linux/${{ matrix.arch }}/release/bundle
