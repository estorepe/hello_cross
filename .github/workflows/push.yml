name: Linux Build (x64 + ARM64)

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        arch: [x64, arm64]
    runs-on: ${{ contains(matrix.arch, 'arm64') && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ninja-build \
          libgtk-3-dev \
          clang \
          cmake \
          gcc \
          g++ \
          libglu1-mesa
        
        # Install Rust
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
        # Install Go
        sudo snap install go --classic

    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        architecture: ${{ matrix.arch == 'arm64' && 'arm64' || 'x64' }}

    - name: Build Native Binaries
      run: |
        ./scripts/build_native.sh ${{ matrix.arch }}
        chmod +x assets/native/linux/*

    - name: Build Flutter App
      run: |
        flutter config --enable-linux-desktop
        flutter clean
        flutter pub get
        flutter build linux --release --target-platform=linux-${{ matrix.arch }}

    - name: Verify Bundle
      run: |
        ls -lh build/linux/${{ matrix.arch }}/release/bundle/
        file build/linux/${{ matrix.arch }}/release/bundle/hello_world

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-app-${{ matrix.arch }}
        path: build/linux/${{ matrix.arch }}/release/bundle
