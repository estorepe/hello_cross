name: Flutter Cross-Platform Build
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: ubuntu-24.04-arm
            platform: linux
            arch: arm64
          - os: windows-latest
            platform: windows
            arch: x64
          - os: macos-latest
            platform: macos
            arch: x64
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup System Dependencies (Linux)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ninja-build \
          libgtk-3-dev \
          clang \
          cmake \
          gcc \
          g++ \
          libglu1-mesa \
          libwayland-dev \
          libxkbcommon-dev

        # ARM64-specific requirements
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu
        fi

    - name: Setup System Dependencies (macOS)
      if: matrix.platform == 'macos'
      run: |
        brew install cmake ninja

    - name: Setup System Dependencies (Windows)
      if: matrix.platform == 'windows'
      run: |
        choco install cmake ninja

    - name: Install Flutter
      uses: cjlapao/setup-flutter-action@v0.1.6
      with:
        channel: 'stable'
        architecture: ${{ matrix.arch }}

    - name: Build Native Binaries
      shell: ${{ matrix.platform == 'windows' && 'pwsh' || 'bash' }}
      run: |
        if ( "${{ matrix.platform }}" -eq "windows" ) {
          ./scripts/build_native_windows.ps1
        } else {
          chmod +x ./scripts/build_native_${{ matrix.platform }}.sh
          ./scripts/build_native_${{ matrix.platform }}.sh ${{ matrix.arch }}
        }
        
        # Make binaries executable (not needed for Windows)
        if ("${{ matrix.platform }}" -ne "windows") {
          chmod +x assets/native/${{ matrix.platform }}/${{ matrix.arch }}/*
        }

    - name: Build Flutter Application
      run: |
        flutter config --enable-${{ matrix.platform }}-desktop
        flutter create --platforms=${{ matrix.platform }} .
        flutter clean
        flutter pub get
        
        # Platform-specific build commands
        if [ "${{ matrix.platform }}" = "linux" ]; then
          flutter build linux --release --target-platform=linux-${{ matrix.arch }} --verbose
        elif [ "$matrix.platform" = "windows" ]; then
          flutter build windows --release
        else
          flutter build macos --release
        fi

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.platform }}-app-${{ matrix.arch }}
        path: |
          ${{ matrix.platform == 'linux' && format('build/linux/{0}/release/bundle', matrix.arch) || '' }}
          ${{ matrix.platform == 'windows' && 'build/windows/x64/runner/Release' || '' }}
          ${{ matrix.platform == 'macos' && 'build/macos/Build/Products/Release' || '' }}
